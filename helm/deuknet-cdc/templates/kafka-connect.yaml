apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
      - name: kafka-connect
        image: {{ .Values.kafkaConnect.image }}
        ports:
        - containerPort: {{ .Values.kafkaConnect.port }}
        env:
        - name: BOOTSTRAP_SERVERS
          value: "kafka:{{ .Values.kafka.port }}"
        - name: GROUP_ID
          value: {{ .Values.kafkaConnect.groupId | quote }}
        - name: CONFIG_STORAGE_TOPIC
          value: "connect_configs"
        - name: OFFSET_STORAGE_TOPIC
          value: "connect_offsets"
        - name: STATUS_STORAGE_TOPIC
          value: "connect_statuses"
        - name: KEY_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: VALUE_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE
          value: "false"
        - name: CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE
          value: "false"
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.kafkaConnect.port }}
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.kafkaConnect.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect
spec:
  selector:
    app: kafka-connect
  ports:
  - port: {{ .Values.kafkaConnect.port }}
    targetPort: {{ .Values.kafkaConnect.port }}
  type: ClusterIP
