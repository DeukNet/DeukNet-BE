Thank you for installing {{ .Chart.Name }}!

Your release is named {{ .Release.Name }}.

To learn more about the release, try:

  $ helm status {{ .Release.Name }}
  $ helm get all {{ .Release.Name }}

{{- if .Values.kibana.enabled }}

Kibana Access:
{{- if eq .Values.kibana.service.type "NodePort" }}
  Kibana URL: http://<node-ip>:{{ .Values.kibana.service.nodePort }}

  For Minikube:
  $ minikube service {{ .Values.kibana.name }} --url
{{- else }}
  Forward port to access Kibana:
  $ kubectl port-forward svc/{{ .Values.kibana.name }} {{ .Values.kibana.service.port }}:{{ .Values.kibana.service.port }} -n {{ .Values.global.namespace }}
  Then access: http://localhost:{{ .Values.kibana.service.port }}
{{- end }}
{{- end }}

{{- if .Values.elasticsearch.enabled }}

Elasticsearch Credentials:
  Credentials are managed via Kubernetes Secret: elasticsearch-credentials

  To retrieve passwords:

  Elastic user password:
  $ kubectl get secret elasticsearch-credentials -n {{ .Values.global.namespace }} -o jsonpath='{.data.elastic-password}' | base64 -d

  Kibana system password:
  $ kubectl get secret elasticsearch-credentials -n {{ .Values.global.namespace }} -o jsonpath='{.data.kibana-password}' | base64 -d

  Logstash writer password:
  $ kubectl get secret elasticsearch-credentials -n {{ .Values.global.namespace }} -o jsonpath='{.data.logstash-writer-password}' | base64 -d

{{- if .Values.elasticsearch.tls.enabled }}
TLS/SSL Configuration:
  TLS is ENABLED for all Elastic Stack components
  CA Certificate: Generated by elasticsearch-ca-setup job
  Connection: https://elasticsearch:9200

  To extract CA certificate:
  $ kubectl exec -n {{ .Values.global.namespace }} deployment/{{ .Values.elasticsearch.name }} -- cat /usr/share/elasticsearch/config/certs/ca.crt
{{- else }}
TLS/SSL Configuration:
  TLS is DISABLED - using HTTP connections
  Connection: http://elasticsearch:9200
{{- end }}
{{- end }}

Components Status:
  Check the status of all components:
  $ kubectl get all -n {{ .Values.global.namespace }} -l release={{ .Release.Name }}

Logs:
  Check Filebeat logs:
  $ kubectl logs -f daemonset/{{ .Values.filebeat.name }} -n {{ .Values.global.namespace }}

  Check Elasticsearch logs:
  $ kubectl logs -f deployment/{{ .Values.elasticsearch.name }} -n {{ .Values.global.namespace }}

KQL Setup:
  Index pattern "{{ .Values.kibana.setup.indexPattern.name }}" will be automatically created on Kibana startup.
  Check setup job status:
  $ kubectl logs job/{{ .Values.kibana.name }}-setup -n {{ .Values.global.namespace }}
