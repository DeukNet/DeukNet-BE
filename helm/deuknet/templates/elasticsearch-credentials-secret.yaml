{{- if .Values.elasticsearch.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.elasticsearch.name }}-create-credentials
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.elasticsearch.name }}-credentials
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: {{ .Values.elasticsearch.name }}-credentials
    spec:
      restartPolicy: Never
      serviceAccountName: {{ .Values.elasticsearch.name }}-setup-passwords
      containers:
        - name: create-secret
          image: bitnami/kubectl:latest
          command:
            - sh
            - -c
            - |
              set -e

              echo "Checking if elasticsearch-credentials secret exists..."

              if kubectl get secret elasticsearch-credentials -n {{ .Values.global.namespace }} >/dev/null 2>&1; then
                echo "Secret already exists, keeping existing passwords"
                exit 0
              fi

              echo "Creating new elasticsearch-credentials secret with random passwords..."

              # 랜덤 비밀번호 생성 (영문자, 숫자, 특수문자 포함)
              ELASTIC_PASSWORD=$(tr -dc 'A-Za-z0-9!@#$%^&*' </dev/urandom | head -c 24)
              KIBANA_PASSWORD=$(tr -dc 'A-Za-z0-9!@#$%^&*' </dev/urandom | head -c 24)
              LOGSTASH_PASSWORD=$(tr -dc 'A-Za-z0-9!@#$%^&*' </dev/urandom | head -c 24)

              # Secret 생성
              kubectl create secret generic elasticsearch-credentials \
                -n {{ .Values.global.namespace }} \
                --from-literal=elastic-password="${ELASTIC_PASSWORD}" \
                --from-literal=kibana-password="${KIBANA_PASSWORD}" \
                --from-literal=logstash-writer-password="${LOGSTASH_PASSWORD}"

              echo "Secret created successfully!"
              echo "==================================================================="
              echo "IMPORTANT: Save these credentials in a secure location!"
              echo "==================================================================="
              echo "Elastic password: ${ELASTIC_PASSWORD}"
              echo "Kibana password: ${KIBANA_PASSWORD}"
              echo "Logstash password: ${LOGSTASH_PASSWORD}"
              echo "==================================================================="
              echo ""
              echo "To retrieve passwords later:"
              echo "  kubectl get secret elasticsearch-credentials -n {{ .Values.global.namespace }} -o jsonpath='{.data.elastic-password}' | base64 -d"
              echo "  kubectl get secret elasticsearch-credentials -n {{ .Values.global.namespace }} -o jsonpath='{.data.kibana-password}' | base64 -d"
              echo "  kubectl get secret elasticsearch-credentials -n {{ .Values.global.namespace }} -o jsonpath='{.data.logstash-writer-password}' | base64 -d"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
{{- end }}
